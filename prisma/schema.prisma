generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  email      String   @unique
  firebaseId String   @unique
  password   String
  name       String?
  uuid       String?
  createdAt  DateTime @default(now())
}

model PlayerMoneyRanking {
  uuid  String @id @default(uuid())
  name  String
  money Float
}

model PlayerTimeRanking {
  uuid        String @id @default(uuid())
  name        String
  time_played BigInt
}

model IslandLevelRanking {
  uuid        String @id @default(uuid())
  position    Int
  player_name String
  level       Int
}

model Orders {
  id           String   @id @default(uuid())
  orderId      String   @unique
  name         String
  amount       Float
  service_name String
  status       String
  createdAt    DateTime @default(now())
}

model PlayerStats {
  uuid               String   @id @default(uuid())
  name               String?
  code               String   @unique
  used               Boolean  @default(false)
  join_date          DateTime @default(now())
  last_seen          DateTime @default(now())
  money              Float    @default(0)
  playtime           BigInt   @default(0)
  smcoins            Float    @default(0)
  money_spent_pln    Float    @default(0)
  achievements_count Int      @default(0)
}

model Mode0Stats {
  uuid          String @id @db.VarChar(36)
  name          String @db.VarChar(16)
  kills         Int    @default(0)
  deaths        Int    @default(0)
  money         Float  @default(0)
  playtime      BigInt @default(0)
  island_level  Int    @default(0)
  smcoins       Float  @default(0)
  broken_blocks Int    @default(0)
  mob_kills     Int    @default(0)
}

model Mode1Stats {
  uuid          String @id @db.VarChar(36)
  name          String @db.VarChar(16)
  kills         Int    @default(0)
  deaths        Int    @default(0)
  money         Float  @default(0)
  playtime      BigInt @default(0)
  island_level  Int    @default(0)
  smcoins       Float  @default(0)
  broken_blocks Int    @default(0)
  mob_kills     Int    @default(0)
}

model Mode2Stats {
  uuid          String @id @db.VarChar(36)
  name          String @db.VarChar(16)
  kills         Int    @default(0)
  deaths        Int    @default(0)
  money         Float  @default(0)
  playtime      BigInt @default(0)
  smcoins       Float  @default(0)
  mob_kills     Int    @default(0)
  blocks_broken Int    @default(0)
  blocks_placed Int    @default(0)
  mcmmo_level   Int    @default(0)
  mcmmo_gornictwo Int  @default(0)
  mcmmo_wykopaliska Int @default(0)
  mcmmo_zielarstwo Int @default(0)
  mcmmo_drwal Int @default(0)
  mcmmo_lucznictwo Int @default(0)
  mcmmo_siekiery Int @default(0)
  mcmmo_crossbows Int @default(0)
  mcmmo_maces Int @default(0)
  mcmmo_miecze Int @default(0)
  mcmmo_tresowanie Int @default(0)
  mcmmo_tridents Int @default(0)
  mcmmo_niezrecznosc Int @default(0)
  mcmmo_akrobatyka Int @default(0)
  mcmmo_alchemia Int @default(0)
  mcmmo_naprawianie Int @default(0)
  mcmmo_odzyskiwanie Int @default(0)
  mcmmo_przepalanie Int @default(0)
  smfishing_level Int @default(0)
  smfishing_xp Int @default(0)
  smfishing_total_catches Int @default(0)
  smfishing_catches_common Int @default(0)
  smfishing_catches_uncommon Int @default(0)
  smfishing_catches_rare Int @default(0)
  smfishing_catches_epic Int @default(0)
  smfishing_catches_legendary Int @default(0)
  smmetin_total Int @default(0)
  smpickaxe_rubin Int @default(0)
  smpickaxe_meteoryt Int @default(0)
  smpickaxe_platyna Int @default(0)
  smpickaxe_bedrock Int @default(0)
  smpickaxe_netherium Int @default(0)
  smpickaxe_total Int @default(0)
}

model Mode3Stats {
  uuid          String @id @db.VarChar(36)
  name          String @db.VarChar(16)
  kills         Int    @default(0)
  deaths        Int    @default(0)
  money         Float  @default(0)
  playtime      BigInt @default(0)
  island_level  Int    @default(0)
  smcoins       Float  @default(0)
  broken_blocks Int    @default(0)
  mob_kills     Int    @default(0)
}

model Mode4Stats {
  uuid          String @id @db.VarChar(36)
  name          String @db.VarChar(16)
  kills         Int    @default(0)
  deaths        Int    @default(0)
  money         Float  @default(0)
  playtime      BigInt @default(0)
  island_level  Int    @default(0)
  smcoins       Float  @default(0)
  broken_blocks Int    @default(0)
  mob_kills     Int    @default(0)
}

model Mode5Stats {
  uuid          String @id @db.VarChar(36)
  name          String @db.VarChar(16)
  kills         Int    @default(0)
  deaths        Int    @default(0)
  money         Float  @default(0)
  playtime      BigInt @default(0)
  island_level  Int    @default(0)
  smcoins       Float  @default(0)
  broken_blocks Int    @default(0)
  mob_kills     Int    @default(0)
}

model PlayerAchievements {
  id                      Int      @id @default(autoincrement())
  uuid                    String
  player_name             String
  achievement_id          String
  material                String?
  unlock_date             DateTime @default(now())
  achievement_description String?
  achievement_name        String?

  @@unique([uuid, achievement_id], name: "unique_player_achievement")
}

model Achievement {
  id                      Int      @id @default(autoincrement())
  uuid                    String
  player_name             String
  achievement_id          String
  achievement_name        String?  @db.VarChar(128)
  achievement_description String?  @db.VarChar(256)
  material                String
  unlock_date             DateTime @default(now())

  @@index([uuid])
}

model PlayerRanks {
  id          Int       @id @default(autoincrement())
  nickname    String
  uuid1       String
  uuid2       String?
  rank        String
  from_when   DateTime
  to_when     DateTime?
  description String?

  @@index([uuid1])
  @@index([uuid2])
  @@index([nickname])
}
